{"version":3,"sources":["components/Base.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControl.js","components/Burger/BuildControls.js","components/Modal/Modal.js","components/Burger/OrderSummary.js","axios-base.js","components/UI/Spinner/Spinner.js","helpers/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/UI/Button/Button.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/ContactData.js","containers/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js","assets/img/chef-burger.jpg"],"names":["aux","props","children","logo","react_default","a","createElement","className","style","height","src","burgerLogo","alt","navigationItem","NavLink","activeClassName","exact","to","link","navigationItems","NavigationItems_NavigationItem","drawerToggle","onClick","clicked","toolbar","SideDrawer_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","backdrop","show","sideDrawer","attachedClasses","open","Base","Backdrop_Backdrop","closed","join","marginTop","Layout","state","showSideDrawer","SideDrawerToggler","_this","setState","sideDrawerTogglerHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","BurgerIngredient","ingredient","type","burger","tIngredients","Object","keys","map","igKey","toConsumableArray","Array","_","i","components_Burger_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","Burger_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","display","orderSummary","ingredientSummary","ingredients","textTransform","canceled","continued","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","shouldShow","errorConfirmHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","components_Modal_Modal","message","auth","email","password","isSignUp","dispatch","authData","returnSecureToken","url","post","then","token","userId","expirationTime","console","log","data","idToken","localId","expiresIn","setTimeout","catch","err","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","sum","disabledInfo","objectSpread","ings","Spinner_Spinner","Burger_Burger","Burger_BuildControls","onIngredientAdded","onIngredientRemoved","tPrice","updatePurchaseState","OrderSummary","connect","burgerBuilder","totalPrice","ingName","ingredientName","get","button","btnType","CheckoutSummary","width","margin","UI_Button_Button","CheckoutCancelled","CheckoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","country","minLength","isEmail","phone","isNumeric","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","checkValidation","rules","isValid","trim","test","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementArray","id","config","form","onSubmit","formElement","Input_Input","orderId","purchaseBurgerSuccess","purchaseBurgerFail","orderActions","Checkout","CheckoutCancelledHandler","goBack","CheckoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","Order_CheckoutSummary_CheckoutSummary","Route","path","match","component","amount","ingredientOutput","ig","border","padding","Orders","onFetchOrders","orders","Order_Order","fetchOrders","fetchOrdersFail","actions","Auth","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthModeHandler","errorMessage","color","App","components_Layout_Layout","Switch","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","undefined","action","updatedIngredient","updatedState","addIngredient","updatedIngredient2","updatedState2","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","basename","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5ad944d8.chunk.js","sourcesContent":["\r\nconst aux = (props) => props.children;\r\n\r\nexport default  aux;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/img/chef-burger.jpg';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"burgre logo\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink activeClassName=\"active\" exact to={props.link}>{props.children}</NavLink>\r\n    </li>\r\n); \r\n\r\nexport default navigationItem; ","import React from 'react';\r\n\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"90%\" />\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'; \r\nimport Aux from '../../Base';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer', 'Close'];\r\n    if (props.open){\r\n        attachedClasses = ['SideDrawer', 'Open'];\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo height=\"11%\" />\r\n                <nav style={{marginTop: \"25px\"}}>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\n\r\nimport Aux from '../Base';\r\nimport './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    SideDrawerToggler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerTogglerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        } );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerTogglerHandler} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.SideDrawerToggler} />\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Layout;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render(){\r\n        let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n        case ('bread-bottom'): \r\n            ingredient = <div className=\"BreadBottom\"></div>;\r\n            break;\r\n        case ('bread-top'): \r\n            ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                    );\r\n            break;\r\n        case ('meat'): \r\n            ingredient = <div className=\"Meat\"></div>;\r\n            break;\r\n        case ('cheese'): \r\n            ingredient = <div className=\"Cheese\"></div>;\r\n            break;\r\n        case ('salad'): \r\n            ingredient = <div className=\"Salad\"></div>;\r\n            break;\r\n        case ('bacon'): \r\n            ingredient = <div className=\"Bacon\"></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n    }\r\n    \r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let tIngredients = Object.keys(props.ingredient).map(igKey => {\r\n        return [...Array(props.ingredient[igKey])].map((_, i) =>{\r\n           return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    //check if the array is empty\r\n    if(tIngredients.length === 0) {\r\n        tIngredients = <p>Please start adding ingredients</p>;\r\n    } \r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {tIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\"> \r\n        <div className=\"Label\">{props.label}</div>\r\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className=\"More\" onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <h5>Current Price: {props.price.toFixed(2)}</h5>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n       <button className=\"OrderButton\" disabled={!props.purchasable}onClick={props.ordered}>ORDER NOW</button> \r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\n\r\nimport './Modal.css';\r\nimport Aux from '../Base';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    // componentWillUpdate(){\r\n    //     console.log('Modal updated')\r\n    // }\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className=\"Modal\" \r\n                    style={{\r\n                        transform: this.props.show ? 'transformY(0)' : 'transformY(-100vh)', \r\n                        display: this.props.show ? 'block' : 'none'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n                );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport Aux from '../Base';\r\n// import Button from '../UI/Button/Button';\r\nimport './Button.css';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li>);\r\n            \r\n    });\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your delicious burger has the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <button className=\"Button Danger\" onClick={props.canceled}>CANCEL</button>\r\n            <button className=\"Button Success\" onClick={props.continued}>CONTINUE</button>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://react-burgerbuilder-21b9b.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = (props) => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../components/Modal/Modal';\r\nimport Base from '../components/Base';\r\n//import axios from '../axios-orders';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null,\r\n            shouldShow: false\r\n        }\r\n        componentDidMount (){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                //console.log(\"shit mounted\");\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error : error, shouldShow : true});\r\n                //console.log(\"shit eerror\");\r\n            });\r\n            // axios.interceptors.request.use(function (response) {\r\n            //     console.log(\"shit eerrorrr\");\r\n            //     return response;\r\n            // }, function (error) {\r\n            //     //catches if the session ended!\r\n            //     this.setState({error : error, shouldShow : true});\r\n            //     console.log(\"shit eerror\");\r\n                \r\n            // });\r\n        }\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmHandler = () => {\r\n            this.setState({error : null})\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <Base>\r\n                    <Modal \r\n                        show={this.state.shouldShow}\r\n                        modalClosed={this.errorConfirmHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Base>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout()); \r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\n export const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = isSignUp ? 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDfwjLDKMWeYUr4lgZc8ju2qcLBXVt-Sgw': 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDfwjLDKMWeYUr4lgZc8ju2qcLBXVt-Sgw';\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeOut(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n };","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\r\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../components/Base';\r\nimport Burger from '../components/Burger/Burger';\r\nimport BuildControls from '../components/Burger/BuildControls';\r\nimport Modal from '../components/Modal/Modal';\r\n// import '../components/Burger/Button.css';\r\nimport OrderSummary from '../components/Burger/OrderSummary';\r\nimport axios from '../axios-base';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../helpers/withErrorHandler';\r\nimport * as actions from '../store/actions/index';\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        \r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    // modalStuff = () => {\r\n    //     const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n    //         return (\r\n    //             <li key={igKey}>\r\n    //                 <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n    //             </li>\r\n    //             );\r\n                \r\n    //     });\r\n    // }\r\n\r\n    componentDidMount (){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el ) => {\r\n                return sum + el;\r\n            }, 0);\r\n            return sum > 0;\r\n    }\r\n  \r\n\r\n    purchaseHandler = () => { \r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        \r\n\r\n        let burger = this.props.error ? <p>ingredients cn't be loaded</p> : <Spinner />;\r\n\r\n        if (this.props.ings){\r\n            burger =(\r\n                <Aux>\r\n                    <Burger ingredient={this.props.ings} />\r\n                    <BuildControls \r\n                        ingredientAdded={this.props.onIngredientAdded} \r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.tPrice}\r\n                        ordered={this.purchaseHandler}\r\n                        purchasable = {this.updatePurchaseState(this.props.ings)} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary  \r\n            ingredients={this.props.ings}\r\n            canceled={this.purchaseCancelHandler}\r\n            continued={this.purchaseContinueHandler}\r\n            price={this.props.tPrice} />;\r\n        }\r\n\r\n        // const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n        //     return (\r\n        //         <li key={igKey}>\r\n        //             <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n        //         </li>);\r\n                \r\n        // })\r\n\r\n        \r\n\r\n        // if (this.state.loading){\r\n        //     orderSummary = <Spinner />;\r\n        // }\r\n        //out come {sald: true, meat:false, ...}\r\n        \r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        tPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        //onIngredientAdded: choice name\r\n        //type is what you have in your reducer ingredientNmae also\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-base';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENTS,\r\n        ingredientName: name\r\n    }\r\n};\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENTS,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\nexport const setIngredient = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients : ingredients\r\n    }\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredient(response.data))\r\n            }).catch(error =>{\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-base';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START,\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData).then(response => {\r\n            console.log(response.data);\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        })\r\n            .catch(error => {\r\n               dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type : actionTypes.PURCHASE_INIT\r\n    };\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    }\r\n};\r\n\r\nexport const fetchOrders = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json?auth=' + token)\r\n            .then(res => {\r\n                const fetchOrders = [];\r\n                for(let key in res.data){\r\n                    fetchOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchOrders));\r\n            }).catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            });\r\n    };\r\n};","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n        disabled={props.disabled}\r\n        className={'Button ' + props.btnType} \r\n        onClick={props.clicked}>\r\n        {props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return(\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>Our delicacy is just the best</h1>\r\n            <div style={{width: '100%',margin: 'auto'}}>\r\n                <Burger ingredient={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.CheckoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.CheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary","import React from 'react';\r\nimport './Input.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses =[\"InputElement\"];\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(\"Invalid\");\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case ('input'):\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}  onChange={props.changed}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}  onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value} onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            ); \r\n            break;\r\n        default:\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}  onChange={props.changed}/>;\r\n    }\r\n    return(\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default input;","import React , {Component} from 'react';\r\nimport Button from '../components/UI/Button/Button';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport './ContactData.css';\r\nimport axios from '../axios-base';\r\nimport Input from '../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport * as orderActions from '../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm : {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 3\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            phone: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Phone No'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 11,\r\n                    isNumeric: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n         const order = {\r\n             ingredients : this.props.ings,\r\n             price: this.props.tPrice,\r\n             orderData: formData\r\n         }\r\n         //console.log(order);\r\n       this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n        if(!rules){\r\n            return true;\r\n        }\r\n        if (rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.isEmail){\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isNumeric){\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm ={\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidation(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched =true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm : updatedOrderForm, formIsValid : formIsValid});\r\n    }\r\n\r\n    render (){\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            })\r\n        } \r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType} \r\n                        elementConfig={formElement.config.elementConfig} \r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your Contact Details</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        tPrice : state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onOrderBurger: (order, token) => dispatch(orderActions.purchaseBurger(order, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData);","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from '../containers/ContactData';\r\nimport {connect} from 'react-redux';\r\n//import * as actions from '../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n    CheckoutCancelledHandler= () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    CheckoutContinuedHandler= () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        let summary = <Redirect to=\"/\" />\r\n        if(this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                    ingredients={this.props.ings}\r\n                    CheckoutCancelled={this.CheckoutCancelledHandler}\r\n                    CheckoutContinued={this.CheckoutContinuedHandler} />\r\n           \r\n                    <Route \r\n                    path={this.props.match.path + '/contact-data'}\r\n                    component={ContactData} />\r\n                </div>\r\n            );    \r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        tPrice: state.burgerBuilder.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from \"react\";\r\nimport './Order.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName, \r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span style={{\r\n                            textTransform: 'capitalize',\r\n                            display: 'inline-block',\r\n                            margin: '0 8px',\r\n                            border: '1px solid #ccc',\r\n                            padding: '5px'\r\n                        }}\r\n         key={ig.name}>{ig.name} : ({ig.amount}) </span>\r\n    })\r\n    return(\r\n        <div className=\"Order\">\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong> {props.price}</strong> </p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-base';\r\nimport withErrorHandler from '../../helpers/withErrorHandler';\r\n//import order from '../../components/Order/Order';\r\nimport * as actions from '../../store/actions/index';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Link from '../../components/Navigation/NavigationItems/NavigationItem';\r\n\r\nclass Orders extends Component{\r\n    \r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token);\r\n    }\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading ) {\r\n            orders = this.props.orders.map(order => (\r\n                        <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\r\n                    ))\r\n        }\r\n        \r\n        return (\r\n            <div> \r\n                <Modal show={this.props.error}>You need to log in first. <NavLink exact to=\"/auth\">Login Here</NavLink> </Modal>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        error: state.order.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls : {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n        },\r\n        isSignUp: true\r\n        //formIsValid: false,\r\n    }\r\n    checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n        if(!rules){\r\n            return true;\r\n        }\r\n        if (rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.isEmail){\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isNumeric){\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidation(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true \r\n            }\r\n        };\r\n        this.setState({controls : updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return{isSignUp: !prevState.isSignUp};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.controls){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.controls[key],\r\n            })\r\n        } \r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType} \r\n                elementConfig={formElement.config.elementConfig} \r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n\r\n        let errorMessage = null;\r\n        \r\n        if(this.props.error) { \r\n            errorMessage = <p style={{color:\"red\"}}>{this.props.error.message}</p>\r\n        }\r\n        \r\n        return (\r\n            <div className=\"Auth\">\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">{this.state.isSignUp ? \"SIGNUP\" : \"LOGIN\" }</Button>\r\n                </form>\r\n                 <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignUp ? \"LOGIN\" : \"SIGNUP\" }</Button>  \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading: state.auth.loading,\r\n        error: state.auth.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder';\r\nimport Checkout from './containers/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n       <Layout>\r\n         <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n          <Route path=\"/auth\" component={Auth} />\r\n         </Switch>\r\n       </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 400,\r\n    error: false\r\n    \r\n};\r\n\r\nconst INGREDIENT_PRICES  = {\r\n    salad : 100,\r\n    cheese: 100,\r\n    meat: 250,\r\n    bacon: 150,\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case (actionTypes.ADD_INGREDIENTS): return addIngredient(state, action);\r\n        case (actionTypes.REMOVE_INGREDIENTS):\r\n            // return {\r\n            //     ...state,\r\n            //     ingredients: {\r\n            //         ...state.ingredients,\r\n            //         [action.ingredientName] : state.ingredients[action.ingredientName] - 1\r\n            //     },\r\n            //     totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            // };\r\n            const updatedIngredient2 = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n            const updatedIngredients2 = updateObject(state.ingredients, updatedIngredient2);\r\n            const updatedState2 = {\r\n                ingredients: updatedIngredients2,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n            return updateObject(state, updatedState2);\r\n        case (actionTypes.SET_INGREDIENTS):\r\n            return updateObject(state, {\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat,\r\n                },\r\n                totalPrice: 400,\r\n                error: false\r\n            });\r\n        case (actionTypes.FETCH_INGREDIENTS_FAILED):\r\n            return updateObject(state, {error: true} );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n    error: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case (actionTypes.PURCHASE_INIT):\r\n            return updateObject(state, {purchased: false});\r\n            // return{\r\n            //     ...state,\r\n            //     purchased: false\r\n            // };\r\n        case (actionTypes.PURCHASE_BURGER_START):\r\n            return updateObject(state, {loading: true});\r\n        case (actionTypes.PURCHASE_BURGER_SUCCESS):\r\n            const newOrder = updateObject(action.orderData,{id: action.orderId});\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased : true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n        case (actionTypes.PURCHASE_BURGER_FAIL):\r\n            return updateObject(state, {loading: false});\r\n        case (actionTypes.FETCH_ORDERS_START):\r\n            return updateObject(state, {loading: true, error:null});\r\n        case (actionTypes.FETCH_ORDERS_SUCCESS):\r\n            return updateObject(state, {\r\n            orders: action.orders,\r\n            error: null,\r\n            loading: false\r\n        });\r\n        case (actionTypes.FETCH_ORDERS_FAIL):\r\n            return updateObject(state, {loading: false, error: action.error});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}; \r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return updateObject(state, {error: null, loading: true});\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return updateObject(state, { \r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false\r\n            });\r\n        case actionTypes.AUTH_FAIL:\r\n            return updateObject(state, {\r\n                error: action.error,\r\n                loading: false\r\n            });\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return updateObject(state, {\r\n                token: null,\r\n                userId: null\r\n            })\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder : burgerBuilderReducer,\r\n    order : orderReducer,\r\n    auth : authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter basename=\"/damiburger\">\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    \r\n);\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/chef-burger.54235b09.jpg\";"],"sourceRoot":""}