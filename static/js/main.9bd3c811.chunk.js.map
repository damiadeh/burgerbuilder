{"version":3,"sources":["assets/img/chef-burger.jpg","components/Base.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControl.js","components/Burger/BuildControls.js","components/Modal/Modal.js","components/Burger/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","helpers/withErrorHandler.js","containers/BurgerBuilder.js","components/UI/Button/Button.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/ContactData.js","containers/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","aux","props","children","logo","react_default","a","createElement","className","style","height","src","burgerLogo","alt","navigationItem","NavLink","activeClassName","exact","to","link","navigationItems","NavigationItems_NavigationItem","drawerToggle","onClick","clicked","toolbar","SideDrawer_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","backdrop","show","sideDrawer","attachedClasses","open","Base","Backdrop_Backdrop","closed","join","marginTop","Layout","state","showSideDrawer","SideDrawerToggler","_this","setState","sideDrawerTogglerHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","BurgerIngredient","ingredient","type","burger","tIngredients","Object","keys","map","igKey","toConsumableArray","Array","_","i","components_Burger_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","Burger_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","display","orderSummary","ingredientSummary","ingredients","textTransform","canceled","continued","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","shouldShow","errorConfirmHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","components_Modal_Modal","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","objectSpread","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceSubtraction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","sum","disabledInfo","OrderSummary","Spinner_Spinner","Burger_Burger","Burger_BuildControls","button","btnType","CheckoutSummary","width","margin","UI_Button_Button","CheckoutCancelled","CheckoutContinued","input","inputElement","inputtype","assign","ContactData","name","email","address","street","postalCode","orderHandler","event","preventDefault","order","customer","country","phone","deliveryMethod","post","then","catch","form","Input_Input","placeholder","Checkout","CheckoutCancelledHandler","goBack","CheckoutContinuedHandler","replace","query","URLSearchParams","location","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","err","return","Order_CheckoutSummary_CheckoutSummary","Route","path","match","render","src_containers_ContactData","ingredientName","amount","ingredientOutput","ig","border","padding","orders","get","fetchOrders","data","id","console","log","Order_Order","App","components_Layout_Layout","Switch","component","Orders","Boolean","window","hostname","app","BrowserRouter","basename","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,orBCGxBC,EAFJ,SAACC,GAAD,OAAWA,EAAMC,yCCUdC,SANF,SAACF,GAAD,OACTG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAACC,OAAQR,EAAMQ,SACxCL,EAAAC,EAAAC,cAAA,OAAKI,IAAKC,IAAYC,IAAI,oCCInBC,SANQ,SAACZ,GAAD,OACnBG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAIhB,EAAMiB,MAAOjB,EAAMC,aCKxDiB,EAPS,SAAClB,GAAD,OACpBG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAACc,EAAD,CAAgBF,KAAK,KAArB,kBACAd,EAAAC,EAAAC,cAACc,EAAD,CAAgBF,KAAK,WAArB,YCIOG,SARM,SAACpB,GAAD,OACjBG,EAAAC,EAAAC,cAAA,OAAKgB,QAASrB,EAAMsB,QAAShB,UAAU,gBACnCH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,eCSOkB,EAVC,SAACvB,GAAD,OACZG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WACdH,EAAAC,EAAAC,cAACmB,EAAD,CAAcF,QAAStB,EAAMyB,sBAC7BtB,EAAAC,EAAAC,cAACqB,EAAD,CAAMlB,OAAO,QACbL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACsB,EAAD,SCJGC,eAJE,SAAC5B,GAAD,OACbA,EAAM6B,KAAO1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWe,QAASrB,EAAMsB,UAAkB,OCuB7DQ,EAnBI,SAAC9B,GAChB,IAAI+B,EAAkB,CAAC,aAAc,SAIrC,OAHI/B,EAAMgC,OACND,EAAkB,CAAC,aAAc,SAGjC5B,EAAAC,EAAAC,cAAC4B,EAAD,KACI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAUL,KAAM7B,EAAMgC,KAAMV,QAAStB,EAAMmC,SAC3ChC,EAAAC,EAAAC,cAAA,OAAKC,UAAWyB,EAAgBK,KAAK,MACjCjC,EAAAC,EAAAC,cAACqB,EAAD,CAAMlB,OAAO,QACbL,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC8B,UAAW,SACpBlC,EAAAC,EAAAC,cAACsB,EAAD,UCeLW,6MA3BXC,MAAQ,CACJC,gBAAgB,KAEpBC,kBAAoB,WAChBC,EAAKC,SAAS,CAACH,gBAAgB,OAGnCI,yBAA2B,WACvBF,EAAKC,SAAS,SAACE,GACX,MAAO,CAACL,gBAAiBK,EAAUL,2FAMvC,OACIrC,EAAAC,EAAAC,cAAC4B,EAAD,KACI9B,EAAAC,EAAAC,cAACyC,EAAD,CAASrB,oBAAqBsB,KAAKH,2BACnCzC,EAAAC,EAAAC,cAAC2C,EAAD,CAAYhB,KAAMe,KAAKR,MAAMC,eAAgBL,OAAQY,KAAKN,oBAC1DtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACXyC,KAAK/C,MAAMC,kBArBXgD,6BCuCNC,gMAvCP,IAAIC,EAAa,KAErB,OAAQJ,KAAK/C,MAAMoD,MACf,IAAM,eACFD,EAAahD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAC5B,MACJ,IAAM,YACF6C,EACQhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAG3B,MACJ,IAAM,OACF6C,EAAahD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAC5B,MACJ,IAAM,SACF6C,EAAahD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAC5B,MACJ,IAAM,QACF6C,EAAahD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAC5B,MACJ,IAAM,QACF6C,EAAahD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAC5B,MACJ,QACI6C,EAAa,KAGrB,OAAOA,SAhCoBF,cCsBhBI,EAtBA,SAACrD,GACZ,IAAIsD,EAAeC,OAAOC,KAAKxD,EAAMmD,YAAYM,IAAI,SAAAC,GACjD,OAAOH,OAAAI,EAAA,EAAAJ,CAAIK,MAAM5D,EAAMmD,WAAWO,KAASD,IAAI,SAACI,EAAGC,GAChD,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAkBC,IAAKN,EAAQI,EAAGV,KAAMM,QAGrDO,OAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,IACnB,IAKH,OAH2B,IAAxBb,EAAae,SACZf,EAAenD,EAAAC,EAAAC,cAAA,6CAGfF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC0D,EAAD,CAAkBX,KAAK,cACtBE,EACDnD,EAAAC,EAAAC,cAAC0D,EAAD,CAAkBX,KAAK,mBCVpBkB,eARM,SAACtE,GAAD,OACjBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASN,EAAMuE,OAC9BpE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOe,QAASrB,EAAMwE,QAASC,SAAUzE,EAAMyE,UAAjE,QACAtE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOe,QAASrB,EAAM0E,OAAxC,WCHFC,EAAW,CACb,CAACJ,MAAO,QAASnB,KAAM,SACvB,CAACmB,MAAO,QAASnB,KAAM,SACvB,CAACmB,MAAO,SAAUnB,KAAM,UACxB,CAACmB,MAAO,OAAQnB,KAAM,SAkBXwB,EAfO,SAAC5E,GAAD,OAClBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,4BAAoBL,EAAM6E,MAAMC,QAAQ,IACvCH,EAASlB,IAAI,SAAAsB,GAAI,OACd5E,EAAAC,EAAAC,cAAC2E,EAAD,CACIhB,IAAKe,EAAKR,MACVA,MAAOQ,EAAKR,MACZG,MAAO,kBAAM1E,EAAMiF,gBAAgBF,EAAK3B,OACxCoB,QAAS,kBAAMxE,EAAMkF,kBAAkBH,EAAK3B,OAC5CqB,SAAUzE,EAAMyE,SAASM,EAAK3B,UAEvCjD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcmE,UAAWzE,EAAMmF,YAAY9D,QAASrB,EAAMoF,SAA5E,eCMQC,uMAtBWC,EAAWC,GAC7B,OAAOD,EAAUzD,OAASkB,KAAK/C,MAAM6B,MAAQyD,EAAUrF,WAAa8C,KAAK/C,MAAMC,0CAM/E,OACIE,EAAAC,EAAAC,cAAC4B,EAAD,KACI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAUL,KAAMkB,KAAK/C,MAAM6B,KAAMP,QAASyB,KAAK/C,MAAMwF,cACrDrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXC,MAAO,CACHkF,UAAW1C,KAAK/C,MAAM6B,KAAO,gBAAkB,qBAC/C6D,QAAS3C,KAAK/C,MAAM6B,KAAO,QAAU,SAExCkB,KAAK/C,MAAMC,kBAhBZgD,cCuBL0C,SAvBM,SAAC3F,GAClB,IAAM4F,EAAoBrC,OAAOC,KAAKxD,EAAM6F,aAAapC,IAAI,SAAAC,GACzD,OACIvD,EAAAC,EAAAC,cAAA,MAAI2D,IAAKN,GACLvD,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACuF,cAAe,eAAgBpC,GADjD,KACiE1D,EAAM6F,YAAYnC,MAI3F,OACIvD,EAAAC,EAAAC,cAAC4B,EAAD,KACI9B,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,iEACAF,EAAAC,EAAAC,cAAA,UACKuF,GAELzF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAAsBL,EAAM6E,MAAMC,QAAQ,KAC7C3E,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBe,QAASrB,EAAM+F,UAAjD,UACA5F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBe,QAASrB,EAAMgG,WAAlD,uBClBGC,SAJEC,EAAMC,OAAO,CAC1BC,QAAS,sDCKEC,SAJC,SAACrG,GAAD,OACZG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gBCiDWgG,EAjDU,SAACC,EAAkBL,GACxC,gBAAAM,GAAA,SAAAC,IAAA,IAAAC,EAAAhE,EAAAa,OAAAoD,EAAA,EAAApD,CAAAR,KAAA0D,GAAA,QAAAG,EAAAC,UAAAxC,OAAAyC,EAAA,IAAAlD,MAAAgD,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GAAA,OAAArE,EAAAa,OAAAyD,EAAA,EAAAzD,CAAAR,MAAA2D,EAAAnD,OAAA0D,EAAA,EAAA1D,CAAAkD,IAAAS,KAAAC,MAAAT,EAAA,CAAA3D,MAAAqB,OAAA0C,MACIvE,MAAQ,CACJ6E,MAAO,KACPC,YAAY,GAHpB3E,EA6BI4E,oBAAsB,WAClB5E,EAAKC,SAAS,CAACyE,MAAQ,QA9B/B1E,EAAA,OAAAa,OAAAgE,EAAA,EAAAhE,CAAAkD,EAAAD,GAAAjD,OAAAiE,EAAA,EAAAjE,CAAAkD,EAAA,EAAAzC,IAAA,oBAAAyD,MAAA,WAKwB,IAAAC,EAAA3E,KAChBA,KAAK4E,eAAiBzB,EAAM0B,aAAaC,QAAQC,IAAI,SAAAC,GAGjD,OAFAL,EAAK/E,SAAS,CAACyE,MAAO,OAEfW,IAEXhF,KAAKiF,eAAiB9B,EAAM0B,aAAaK,SAASH,IAAI,SAAAI,GAAG,OAAIA,GAAK,SAAAd,GAC9DM,EAAK/E,SAAS,CAACyE,MAAQA,EAAOC,YAAa,QAZvD,CAAArD,IAAA,uBAAAyD,MAAA,WA0BQvB,EAAM0B,aAAaC,QAAQM,MAAMpF,KAAK4E,gBACtCzB,EAAM0B,aAAaC,QAAQM,MAAMpF,KAAKiF,kBA3B9C,CAAAhE,IAAA,SAAAyD,MAAA,WAkCQ,OACItH,EAAAC,EAAAC,cAAC4B,EAAD,KACI9B,EAAAC,EAAAC,cAAC+H,EAAD,CACIvG,KAAMkB,KAAKR,MAAM8E,WACjB7B,YAAazC,KAAKuE,qBACjBvE,KAAKR,MAAM6E,MAAQrE,KAAKR,MAAM6E,MAAMiB,QAAU,MAEnDlI,EAAAC,EAAAC,cAACkG,EAAqBxD,KAAK/C,YAzC3CyG,EAAA,CAAqBxD,cCMnBqF,EAAqB,CACvBC,MAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,MAAO,KA8JIC,6MA1JXpG,MAAQ,CACJsD,YAAa,CACT0C,MAAO,EACPG,MAAO,EACPF,OAAQ,EACRC,KAAM,GAEVG,WAAY,IACZzD,aAAa,EACb0D,YAAY,EACZC,SAAS,KA0BbC,qBAAuB,SAAC3F,GACpB,IACM4F,EADWtG,EAAKH,MAAMsD,YAAYzC,GACR,EAC1B6F,EAAkB1F,OAAA2F,EAAA,EAAA3F,CAAA,GACjBb,EAAKH,MAAMsD,aAElBoD,EAAmB7F,GAAQ4F,EAC3B,IAAMG,EAAgBb,EAAkBlF,GAElCgG,EADW1G,EAAKH,MAAMqG,WACAO,EAC5BzG,EAAKC,SAAS,CAACiG,WAAYQ,EAAUvD,YAAaoD,IAClDvG,EAAK2G,oBAAoBJ,MAG7BK,wBAA0B,SAAClG,GACvB,IAAMmG,EAAW7G,EAAKH,MAAMsD,YAAYzC,GACxC,KAAGmG,GAAY,GAAf,CAGA,IAAMP,EAAeO,EAAW,EAC1BN,EAAkB1F,OAAA2F,EAAA,EAAA3F,CAAA,GACjBb,EAAKH,MAAMsD,aAElBoD,EAAmB7F,GAAQ4F,EAC3B,IAAMQ,EAAmBlB,EAAkBlF,GAErCgG,EADW1G,EAAKH,MAAMqG,WACAY,EAC5B9G,EAAKC,SAAS,CAACiG,WAAYQ,EAAUvD,YAAaoD,IAClDvG,EAAK2G,oBAAoBJ,OAG7BQ,gBAAkB,WACd/G,EAAKC,SAAS,CAACkG,YAAY,OAG/Ba,sBAAwB,WACpBhH,EAAKC,SAAS,CAACkG,YAAY,OAG/Bc,wBAA0B,WAuBtB,IAAMC,EAAc,GACpB,IAAI,IAAI9F,KAAKpB,EAAKH,MAAMsD,YACpB+D,EAAYC,KAAKC,mBAAmBhG,GAAK,IAAMgG,mBAAmBpH,EAAKH,MAAMsD,YAAY/B,KAE7F8F,EAAYC,KAAK,SAAWnH,EAAKH,MAAMqG,YACvC,IAAMmB,EAAcH,EAAYxH,KAAK,KACrCM,EAAK1C,MAAMgK,QAAQH,KAAK,CACpBI,SAAU,YAEVC,OAAQ,IAAMH,wFAnFFlE,GAChB,IAAMsE,EAAM5G,OAAOC,KAAKqC,GACnBpC,IAAI,SAAAC,GACD,OAAOmC,EAAYnC,KAEtBO,OAAO,SAACkG,EAAKhG,GACV,OAAOgG,EAAMhG,GACd,GACHpB,KAAKJ,SAAS,CAACwC,YAAagF,EAAM,qCAgFtC,IAAMC,EAAY7G,OAAA2F,EAAA,EAAA3F,CAAA,GACXR,KAAKR,MAAMsD,aAElB,IAAK,IAAI7B,KAAOoG,EACZA,EAAapG,GAAOoG,EAAapG,IAAQ,EAE7C,IAAI2B,EAAexF,EAAAC,EAAAC,cAACgK,EAAD,CACnBxE,YAAa9C,KAAKR,MAAMsD,YACxBE,SAAUhD,KAAK2G,sBACf1D,UAAWjD,KAAK4G,wBAChB9E,MAAO9B,KAAKR,MAAMqG,aAalB,OAZI7F,KAAKR,MAAMuG,UACXnD,EAAexF,EAAAC,EAAAC,cAACiK,EAAD,OAYfnK,EAAAC,EAAAC,cAAC4B,EAAD,KACI9B,EAAAC,EAAAC,cAAC+H,EAAD,CAAOvG,KAAMkB,KAAKR,MAAMsG,WAAYrD,YAAazC,KAAK2G,uBACjD/D,GAELxF,EAAAC,EAAAC,cAACkK,EAAD,CAAQpH,WAAYJ,KAAKR,MAAMsD,cAC/B1F,EAAAC,EAAAC,cAACmK,EAAD,CACIvF,gBAAiBlC,KAAKgG,qBACtB7D,kBAAmBnC,KAAKuG,wBACxB7E,SAAU2F,EACVvF,MAAO9B,KAAKR,MAAMqG,WAClBxD,QAASrC,KAAK0G,gBACdtE,YAAepC,KAAKR,MAAM4C,sBApJlBlC,aCXbwH,SAJA,SAACzK,GAAD,OACXG,EAAAC,EAAAC,cAAA,UAAQC,UAAW,UAAYN,EAAM0K,QAASrJ,QAASrB,EAAMsB,SAAUtB,EAAMC,YCalE0K,SAbS,SAAC3K,GACrB,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACqK,MAAO,OAAOC,OAAQ,SAC/B1K,EAAAC,EAAAC,cAACkK,EAAD,CAAQpH,WAAYnD,EAAM6F,eAE9B1F,EAAAC,EAAAC,cAACyK,EAAD,CAAQJ,QAAQ,SAASpJ,QAAStB,EAAM+K,mBAAxC,UACA5K,EAAAC,EAAAC,cAACyK,EAAD,CAAQJ,QAAQ,UAAUpJ,QAAStB,EAAMgL,mBAAzC,eCWGC,eArBD,SAACjL,GACX,IAAIkL,EAAe,KAEnB,OAAOlL,EAAMmL,WACT,IAAM,QACFD,EAAe/K,EAAAC,EAAAC,cAAA,QAAAkD,OAAA6H,OAAA,CAAO9K,UAAU,gBAAmBN,IACnD,MACJ,IAAK,WACDkL,EAAe/K,EAAAC,EAAAC,cAAA,WAAAkD,OAAA6H,OAAA,CAAU9K,UAAU,gBAAmBN,IACtD,MACJ,QACIkL,EAAe/K,EAAAC,EAAAC,cAAA,QAAAkD,OAAA6H,OAAA,CAAO9K,UAAU,gBAAmBN,IAE3D,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASN,EAAMuE,OAC/B2G,KC+CEG,6MA1DX9I,MAAQ,CACJ+I,KAAM,GACNC,MAAO,GACPC,QAAS,CACLC,OAAQ,GACRC,WAAY,IAEhB5C,SAAS,KAGb6C,aAAe,SAACC,GACZA,EAAMC,iBACNnJ,EAAKC,SAAS,CAACmG,SAAS,IACvB,IAAMgD,EAAQ,CACVjG,YAAcnD,EAAK1C,MAAM6F,YACzBhB,MAAOnC,EAAK1C,MAAM6E,MAClBkH,SAAU,CACNT,KAAM,mBACNE,QAAS,CACLC,OAAQ,kBACRO,QAAS,WAEbT,MAAO,gBACPU,MAAO,eAEXC,eAAgB,QAErBhG,EAAMiG,KAAK,eAAgBL,GAAOM,KAAK,SAAAnE,GACnCvF,EAAKC,SAAS,CAACmG,SAAS,IACxBpG,EAAK1C,MAAMgK,QAAQH,KAAK,OAEvBwC,MAAM,SAAAjF,GACH1E,EAAKC,SAAS,CAACmG,SAAS,+EAKhC,IAAIwD,EACAnM,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACkM,EAAD,CAAOpB,UAAU,QAAQ/H,KAAK,OAAOkI,KAAK,OAAOkB,YAAY,cAC7DrM,EAAAC,EAAAC,cAACkM,EAAD,CAAOpB,UAAU,QAAQ/H,KAAK,QAAQkI,KAAK,QAAQkB,YAAY,eAC/DrM,EAAAC,EAAAC,cAACkM,EAAD,CAAOpB,UAAU,QAAQ/H,KAAK,OAAOkI,KAAK,SAASkB,YAAY,YAC/DrM,EAAAC,EAAAC,cAACkM,EAAD,CAAOpB,UAAU,QAAQ/H,KAAK,OAAOkI,KAAK,SAASkB,YAAY,gBAC/DrM,EAAAC,EAAAC,cAACyK,EAAD,CAAQJ,QAAQ,UAAUpJ,QAASyB,KAAK4I,cAAxC,UAMR,OAHI5I,KAAKR,MAAMuG,UACXwD,EAAOnM,EAAAC,EAAAC,cAACiK,EAAD,OAGPnK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,wCACCiM,UArDSrJ,aCyCXwJ,6MA1CXlK,MAAQ,CACJsD,YAAa,KACb+C,WAAY,KAkBhB8D,yBAA0B,WACtBhK,EAAK1C,MAAMgK,QAAQ2C,YAGvBC,yBAA0B,WACtBlK,EAAK1C,MAAMgK,QAAQ6C,QAAQ,+GAnB3B,IAAMC,EAAQ,IAAIC,gBAAgBhK,KAAK/C,MAAMgN,SAAS9C,QAChDrE,EAAc,GAChBhB,EAAQ,EAHKoI,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIjB,QAAAC,EAAAC,EAAkBR,EAAMS,UAAxBC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAkC,KAAzBW,EAAyBP,EAAA5F,MAEf,UAAZmG,EAAM,GACL/I,GAAS+I,EAAM,GAEf/H,EAAY+H,EAAM,KAAOA,EAAM,IATtB,MAAAC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAYjBpK,KAAKJ,SAAS,CAACkD,YAAaA,EAAa+C,WAAY/D,qCAWjD,IAAA6C,EAAA3E,KACJ,OACI5C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0N,EAAD,CACIlI,YAAa9C,KAAKR,MAAMsD,YACxBkF,kBAAmBhI,KAAK2J,yBACxB1B,kBAAmBjI,KAAK6J,2BAExBzM,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAOC,KAAMlL,KAAK/C,MAAMkO,MAAMD,KAAO,gBAAiBE,OAAQ,SAACnO,GAAD,OAAYG,EAAAC,EAAAC,cAAC+N,EAAD7K,OAAA6H,OAAA,CAAavF,YAAa6B,EAAKnF,MAAMsD,YAAahB,MAAO6C,EAAKnF,MAAMqG,YAAgB5I,eArC3JiD,aCyBR6I,SA3BD,SAAC9L,GACX,IAAM6F,EAAc,GAEpB,IAAK,IAAIwI,KAAkBrO,EAAM6F,YAC7BA,EAAYgE,KAAK,CACbyB,KAAM+C,EACNC,OAAQtO,EAAM6F,YAAYwI,KAGlC,IAAME,EAAmB1I,EAAYpC,IAAI,SAAA+K,GACrC,OAAOrO,EAAAC,EAAAC,cAAA,QAAME,MAAO,CACAuF,cAAe,aACfJ,QAAS,eACTmF,OAAQ,QACR4D,OAAQ,iBACRC,QAAS,OAE5B1K,IAAKwK,EAAGlD,MAAOkD,EAAGlD,KAPZ,OAOsBkD,EAAGF,OAPzB,QASX,OACInO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,yBAAiBkO,GACjBpO,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,kBAAUL,EAAM6E,OAA1B,QCcOyB,+MA/BX/D,MAAQ,CACJoM,OAAS,GACT7F,SAAU,sFAEK,IAAApB,EAAA3E,KACfmD,EAAM0I,IAAI,gBACLxC,KAAK,SAAAlE,GACF,IAAM2G,EAAc,GACpB,IAAI,IAAI7K,KAAOkE,EAAI4G,KACfD,EAAYhF,KAAZtG,OAAA2F,EAAA,EAAA3F,CAAA,GACO2E,EAAI4G,KAAK9K,GADhB,CAEI+K,GAAI/K,KAGZ0D,EAAK/E,SAAS,CAACmG,SAAS,EAAO6F,OAAQE,MACxCxC,MAAM,SAAAjF,GACL4H,QAAQC,IAAI7H,EAAMiB,SAClBX,EAAK/E,SAAS,CAACmG,SAAS,uCAIhC,OACI3I,EAAAC,EAAAC,cAAA,WACK0C,KAAKR,MAAMoM,OAAOlL,IAAI,SAAAqI,GAAK,OACxB3L,EAAAC,EAAAC,cAAC6O,EAAD,CAAOlL,IAAK8H,EAAMiD,GAAIlJ,YAAaiG,EAAMjG,YAAahB,OAAQiH,EAAMjH,kBAzBnE5B,aAgCmBiD,GCfzBiJ,mLAdX,OACEhP,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC+O,EAAD,KACEjP,EAAAC,EAAAC,cAACgP,EAAA,EAAD,KACClP,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAOC,KAAK,IAAIlN,OAAK,EAACuO,UAAW3G,IACjCxI,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAOC,KAAK,YAAYqB,UAAW7C,IACnCtM,EAAAC,EAAAC,cAAC2N,EAAA,EAAD,CAAOC,KAAK,UAAUqB,UAAWC,cARzBtM,aCIEuM,QACW,cAA7BC,OAAOzC,SAAS0C,UAEe,UAA7BD,OAAOzC,SAAS0C,UAEhBD,OAAOzC,SAAS0C,SAASxB,MACvB,2DCXN,IAAMyB,EACFxP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,CAAeC,SAAS,eACpB1P,EAAAC,EAAAC,cAACyP,EAAD,OAIRC,IAAS5B,OAAOwB,EAAMK,SAASC,eAAe,SDgHxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhE,KAAK,SAAAiE,GACjCA,EAAaC","file":"static/js/main.9bd3c811.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chef-burger.54235b09.jpg\";","\r\nconst aux = (props) => props.children;\r\n\r\nexport default  aux;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/img/chef-burger.jpg';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"burgre logo\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink activeClassName=\"active\" exact to={props.link}>{props.children}</NavLink>\r\n    </li>\r\n); \r\n\r\nexport default navigationItem; ","import React from 'react';\r\n\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"90%\" />\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'; \r\nimport Aux from '../../Base';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer', 'Close'];\r\n    if (props.open){\r\n        attachedClasses = ['SideDrawer', 'Open'];\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo height=\"11%\" />\r\n                <nav style={{marginTop: \"25px\"}}>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\n\r\nimport Aux from '../Base';\r\nimport './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    SideDrawerToggler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerTogglerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        } );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerTogglerHandler} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.SideDrawerToggler} />\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Layout;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render(){\r\n        let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n        case ('bread-bottom'): \r\n            ingredient = <div className=\"BreadBottom\"></div>;\r\n            break;\r\n        case ('bread-top'): \r\n            ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                    );\r\n            break;\r\n        case ('meat'): \r\n            ingredient = <div className=\"Meat\"></div>;\r\n            break;\r\n        case ('cheese'): \r\n            ingredient = <div className=\"Cheese\"></div>;\r\n            break;\r\n        case ('salad'): \r\n            ingredient = <div className=\"Salad\"></div>;\r\n            break;\r\n        case ('bacon'): \r\n            ingredient = <div className=\"Bacon\"></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n    }\r\n    \r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let tIngredients = Object.keys(props.ingredient).map(igKey => {\r\n        return [...Array(props.ingredient[igKey])].map((_, i) =>{\r\n           return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    //check if the array is empty\r\n    if(tIngredients.length === 0) {\r\n        tIngredients = <p>Please start adding ingredients</p>;\r\n    } \r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {tIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\"> \r\n        <div className=\"Label\">{props.label}</div>\r\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className=\"More\" onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <h5>Current Price: {props.price.toFixed(2)}</h5>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n       <button className=\"OrderButton\" disabled={!props.purchasable}onClick={props.ordered}>ORDER NOW</button> \r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\n\r\nimport './Modal.css';\r\nimport Aux from '../Base';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    // componentWillUpdate(){\r\n    //     console.log('Modal updated')\r\n    // }\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className=\"Modal\" \r\n                    style={{\r\n                        transform: this.props.show ? 'transformY(0)' : 'transformY(-100vh)', \r\n                        display: this.props.show ? 'block' : 'none'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n                );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport Aux from '../Base';\r\n// import Button from '../UI/Button/Button';\r\nimport './Button.css';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li>);\r\n            \r\n    });\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your delicious burger has the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <button className=\"Button Danger\" onClick={props.canceled}>CANCEL</button>\r\n            <button className=\"Button Success\" onClick={props.continued}>CONTINUE</button>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://react-burgerbuilder-21b9b.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = (props) => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../components/Modal/Modal';\r\nimport Base from '../components/Base';\r\n//import axios from '../axios-orders';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null,\r\n            shouldShow: false\r\n        }\r\n        componentDidMount (){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                //console.log(\"shit mounted\");\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error : error, shouldShow : true});\r\n                //console.log(\"shit eerror\");\r\n            });\r\n            // axios.interceptors.request.use(function (response) {\r\n            //     console.log(\"shit eerrorrr\");\r\n            //     return response;\r\n            // }, function (error) {\r\n            //     //catches if the session ended!\r\n            //     this.setState({error : error, shouldShow : true});\r\n            //     console.log(\"shit eerror\");\r\n                \r\n            // });\r\n        }\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmHandler = () => {\r\n            this.setState({error : null})\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <Base>\r\n                    <Modal \r\n                        show={this.state.shouldShow}\r\n                        modalClosed={this.errorConfirmHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Base>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport Aux from '../components/Base';\r\nimport Burger from '../components/Burger/Burger';\r\nimport BuildControls from '../components/Burger/BuildControls';\r\nimport Modal from '../components/Modal/Modal';\r\n// import '../components/Burger/Button.css';\r\nimport OrderSummary from '../components/Burger/OrderSummary';\r\nimport axios from '../axios-orders';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../helpers/withErrorHandler';\r\n\r\n\r\nconst INGREDIENT_PRICES  = {\r\n    salad : 100,\r\n    cheese: 100,\r\n    meat: 250,\r\n    bacon: 150,\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 400,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    // modalStuff = () => {\r\n    //     const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n    //         return (\r\n    //             <li key={igKey}>\r\n    //                 <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n    //             </li>\r\n    //             );\r\n                \r\n    //     });\r\n    // }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el ) => {\r\n                return sum + el;\r\n            }, 0);\r\n            this.setState({purchasable: sum > 0});\r\n    }\r\n    //sum is sum of all ingredients\r\n    //el is individual element\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceSubtraction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceSubtraction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () =>  { \r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert(\"Payment Page!!\");\r\n        // this.setState({loading: true});\r\n        //  const order = {\r\n        //      ingredients : this.state.ingredients,\r\n        //      price: this.state.totalPrice,\r\n        //      customer: {\r\n        //          name: 'Adepoju Damilare',\r\n        //          address: {\r\n        //              street: '13, Yaba, Lagos',\r\n        //              country: 'Nigeria'\r\n        //          },\r\n        //          email: 'dami@mail.com',\r\n        //          phone: '08012345678'\r\n        //      },\r\n        //      deliveryMethod: 'Ship'\r\n        //  }\r\n        // axios.post('/orders.json', order).then(response => {\r\n        //     this.setState({loading: false, purchasing: false});\r\n        // })\r\n        //     .catch(error => {\r\n        //         this.setState({loading: false, purchasing: false});\r\n        //     });\r\n        const queryParams = [];\r\n        for(let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            //to pass the built burger data to the checkout page\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = <OrderSummary  \r\n        ingredients={this.state.ingredients}\r\n        canceled={this.purchaseCancelHandler}\r\n        continued={this.purchaseContinueHandler}\r\n        price={this.state.totalPrice} />;\r\n        if (this.state.loading){\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        // const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n        //     return (\r\n        //         <li key={igKey}>\r\n        //             <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n        //         </li>);\r\n                \r\n        // })\r\n        //out come {sald: true, meat:false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                <Burger ingredient={this.state.ingredients} />\r\n                <BuildControls \r\n                    ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    ordered={this.purchaseHandler}\r\n                    purchasable = {this.state.purchasable} />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default BurgerBuilder;","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button className={'Button ' + props.btnType} onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return(\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>Our delicacy is just the best</h1>\r\n            <div style={{width: '100%',margin: 'auto'}}>\r\n                <Burger ingredient={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.CheckoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.CheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary","import React from 'react';\r\nimport './Input.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n\r\n    switch(props.inputtype){\r\n        case ('input'):\r\n            inputElement = <input className=\"InputElement\" {...props} />;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea className=\"InputElement\" {...props} />;\r\n            break;\r\n        default:\r\n            inputElement = <input className=\"InputElement\" {...props} />;\r\n    }\r\n    return(\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default input;","import React , {Component} from 'react';\r\nimport Button from '../components/UI/Button/Button';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport './ContactData.css';\r\nimport axios from '../axios-orders';\r\nimport Input from '../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postalCode: ''\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n         const order = {\r\n             ingredients : this.props.ingredients,\r\n             price: this.props.price,\r\n             customer: {\r\n                 name: 'Adepoju Damilare',\r\n                 address: {\r\n                     street: '13, Yaba, Lagos',\r\n                     country: 'Nigeria'\r\n                 },\r\n                 email: 'dami@mail.com',\r\n                 phone: '08012345678'\r\n             },\r\n             deliveryMethod: 'Ship'\r\n         }\r\n        axios.post('/orders.json', order).then(response => {\r\n            this.setState({loading: false});\r\n            this.props.history.push('/');\r\n        })\r\n            .catch(error => {\r\n                this.setState({loading: false});\r\n            });\r\n    }\r\n\r\n    render (){\r\n        let form = (\r\n            <form>\r\n                <Input inputtype=\"input\" type=\"text\" name=\"name\" placeholder=\"Your Name\" />\r\n                <Input inputtype=\"input\" type=\"email\" name=\"email\" placeholder=\"Your email\" />\r\n                <Input inputtype=\"input\" type=\"text\" name=\"street\" placeholder=\"Address\" />\r\n                <Input inputtype=\"input\" type=\"text\" name=\"postal\" placeholder=\"Postal Code\" />\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.state.loading){\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your Contact Details</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from '../containers/ContactData';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 0\r\n    }\r\n\r\n    componentWillMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for (let param of query.entries()){\r\n            //['salad', '1]//the plus added coverts it to a number\r\n            if(param[0] ==='price'){\r\n                price = +param[1];\r\n            }else{\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState({ingredients: ingredients, totalPrice: price});\r\n    }\r\n\r\n    CheckoutCancelledHandler= () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    CheckoutContinuedHandler= () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.state.ingredients}\r\n                    CheckoutCancelled={this.CheckoutCancelledHandler}\r\n                    CheckoutContinued={this.CheckoutContinuedHandler} />\r\n                    {/* instead of using component we use render to be able to pass the ingredient data to the condata data page */}\r\n                    <Route path={this.props.match.path + '/contact-data'} render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from \"react\";\r\nimport './Order.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName, \r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span style={{\r\n                            textTransform: 'capitalize',\r\n                            display: 'inline-block',\r\n                            margin: '0 8px',\r\n                            border: '1px solid #ccc',\r\n                            padding: '5px'\r\n                        }}\r\n         key={ig.name}>{ig.name} : ({ig.amount}) </span>\r\n    })\r\n    return(\r\n        <div className=\"Order\">\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong> {props.price}</strong> </p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react'\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../helpers/withErrorHandler';\r\nimport order from '../../components/Order/Order';\r\n\r\n\r\nclass Orders extends Component{\r\n    state = {\r\n        orders : [],\r\n        loading : true,\r\n    }\r\n    componentDidMount(){\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchOrders = [];\r\n                for(let key in res.data){\r\n                    fetchOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading: false, orders: fetchOrders});\r\n            }).catch(error => {\r\n                console.log(error.message)\r\n                this.setState({loading: false});\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder';\r\nimport Checkout from './containers/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n       <Layout>\r\n         <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n         </Switch>\r\n       </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n    <BrowserRouter basename=\"/damiburger\">\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}