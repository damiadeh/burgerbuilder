{"version":3,"sources":["components/Base.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControl.js","components/Burger/BuildControls.js","components/Modal/Modal.js","components/Burger/OrderSummary.js","axios-base.js","components/UI/Spinner/Spinner.js","helpers/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/UI/Button/Button.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/ContactData.js","containers/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js","assets/img/chef-burger.jpg"],"names":["aux","props","children","logo","react_default","a","createElement","className","style","height","src","burgerLogo","alt","navigationItem","NavLink","activeClassName","exact","to","link","navigationItems","NavigationItems_NavigationItem","isAuthenticated","drawerToggle","onClick","clicked","toolbar","SideDrawer_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","isAuth","backdrop","show","sideDrawer","attachedClasses","open","Base","Backdrop_Backdrop","closed","join","marginTop","Layout","state","showSideDrawer","SideDrawerToggler","_this","setState","sideDrawerTogglerHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","connect","auth","token","BurgerIngredient","ingredient","type","burger","tIngredients","Object","keys","map","igKey","toConsumableArray","Array","_","i","components_Burger_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","Burger_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","display","orderSummary","ingredientSummary","ingredients","textTransform","canceled","continued","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","shouldShow","errorConfirmHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","components_Modal_Modal","message","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeOut","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","loading","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","objectSpread","ings","Spinner_Spinner","Burger_Burger","Burger_BuildControls","onIngredientAdded","onIngredientRemoved","tPrice","updatePurchaseState","OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","button","btnType","CheckoutSummary","width","margin","UI_Button_Button","CheckoutCancelled","CheckoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","country","minLength","email","isEmail","phone","isNumeric","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","checkValidation","rules","isValid","trim","test","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementArray","id","config","form","onSubmit","formElement","Input_Input","post","console","log","orderId","purchaseBurgerSuccess","purchaseBurgerFail","orderActions","Checkout","CheckoutCancelledHandler","goBack","CheckoutContinuedHandler","replace","summary","Redirect","purchasedRedirect","purchased","Order_CheckoutSummary_CheckoutSummary","Route","match","component","amount","ingredientOutput","ig","border","padding","Orders","onFetchOrders","orders","Order_Order","queryParams","fetchOrders","fetchOrdersFail","Auth","password","isSignUp","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","color","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","err","Logout","onLogout","App","onTryAutoSignUp","routes","Switch","components_Layout_Layout","withRouter","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","undefined","action","updatedIngredient","updatedState","addIngredient","updatedIngredient2","updatedState2","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","basename","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9d180b4e.chunk.js","sourcesContent":["\r\nconst aux = (props) => props.children;\r\n\r\nexport default  aux;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/img/chef-burger.jpg';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"burgre logo\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <NavLink activeClassName=\"active\" exact to={props.link}>{props.children}</NavLink>\r\n    </li>\r\n); \r\n\r\nexport default navigationItem; ","import React from 'react';\r\n\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\">Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem>: null}\r\n        { props.isAuthenticated ? \r\n        <NavigationItem link=\"/logout\">Logout</NavigationItem> : <NavigationItem link=\"/auth\">Authenticate</NavigationItem> }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"90%\" />\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems isAuthenticated={props.isAuth}  />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'; \r\nimport Aux from '../../Base';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer', 'Close'];\r\n    if (props.open){\r\n        attachedClasses = ['SideDrawer', 'Open'];\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <Logo height=\"11%\" />\r\n                <nav style={{marginTop: \"25px\"}}>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../Base';\r\nimport './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    SideDrawerToggler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerTogglerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        } );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerTogglerHandler} />\r\n                <SideDrawer \r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer} closed={this.SideDrawerToggler} />\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render(){\r\n        let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n        case ('bread-bottom'): \r\n            ingredient = <div className=\"BreadBottom\"></div>;\r\n            break;\r\n        case ('bread-top'): \r\n            ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                    );\r\n            break;\r\n        case ('meat'): \r\n            ingredient = <div className=\"Meat\"></div>;\r\n            break;\r\n        case ('cheese'): \r\n            ingredient = <div className=\"Cheese\"></div>;\r\n            break;\r\n        case ('salad'): \r\n            ingredient = <div className=\"Salad\"></div>;\r\n            break;\r\n        case ('bacon'): \r\n            ingredient = <div className=\"Bacon\"></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n    }\r\n    \r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let tIngredients = Object.keys(props.ingredient).map(igKey => {\r\n        return [...Array(props.ingredient[igKey])].map((_, i) =>{\r\n           return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    //check if the array is empty\r\n    if(tIngredients.length === 0) {\r\n        tIngredients = <p>Please start adding ingredients</p>;\r\n    } \r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {tIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\"> \r\n        <div className=\"Label\">{props.label}</div>\r\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className=\"More\" onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <h5>Current Price: {props.price.toFixed(2)}</h5>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n       <button \r\n            className=\"OrderButton\" \r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button> \r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\n\r\nimport './Modal.css';\r\nimport Aux from '../Base';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    // componentWillUpdate(){\r\n    //     console.log('Modal updated')\r\n    // }\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className=\"Modal\" \r\n                    style={{\r\n                        transform: this.props.show ? 'transformY(0)' : 'transformY(-100vh)', \r\n                        display: this.props.show ? 'block' : 'none'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n                );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport Aux from '../Base';\r\n// import Button from '../UI/Button/Button';\r\nimport './Button.css';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li>);\r\n            \r\n    });\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your delicious burger has the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <button className=\"Button Danger\" onClick={props.canceled}>CANCEL</button>\r\n            <button className=\"Button Success\" onClick={props.continued}>CONTINUE</button>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://react-burgerbuilder-21b9b.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = (props) => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../components/Modal/Modal';\r\nimport Base from '../components/Base';\r\n//import axios from '../axios-orders';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null,\r\n            shouldShow: false\r\n        }\r\n        componentDidMount (){\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                //console.log(\"shit mounted\");\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error : error, shouldShow : true});\r\n                //console.log(\"shit eerror\");\r\n            });\r\n            // axios.interceptors.request.use(function (response) {\r\n            //     console.log(\"shit eerrorrr\");\r\n            //     return response;\r\n            // }, function (error) {\r\n            //     //catches if the session ended!\r\n            //     this.setState({error : error, shouldShow : true});\r\n            //     console.log(\"shit eerror\");\r\n                \r\n            // });\r\n        }\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n        errorConfirmHandler = () => {\r\n            this.setState({error : null})\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <Base>\r\n                    <Modal \r\n                        show={this.state.shouldShow}\r\n                        modalClosed={this.errorConfirmHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Base>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeOut = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout()); \r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\n export const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = isSignUp ? 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyDfwjLDKMWeYUr4lgZc8ju2qcLBXVt-Sgw': 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDfwjLDKMWeYUr4lgZc8ju2qcLBXVt-Sgw';\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                //console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeOut(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                //console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n };\r\n\r\n export const setAuthRedirectPath = (path) => {\r\n     return {\r\n         type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n         path: path\r\n     }\r\n }\r\n\r\n export const authCheckState = () => {\r\n     return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token){\r\n            dispatch(logout()); \r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate > new Date){\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeOut((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(logout());\r\n            }\r\n        }\r\n     };\r\n };","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\r\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../components/Base';\r\nimport Burger from '../components/Burger/Burger';\r\nimport BuildControls from '../components/Burger/BuildControls';\r\nimport Modal from '../components/Modal/Modal';\r\n// import '../components/Burger/Button.css';\r\nimport OrderSummary from '../components/Burger/OrderSummary';\r\nimport axios from '../axios-base';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../helpers/withErrorHandler';\r\nimport * as actions from '../store/actions/index';\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        \r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    // modalStuff = () => {\r\n    //     const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n    //         return (\r\n    //             <li key={igKey}>\r\n    //                 <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n    //             </li>\r\n    //             );\r\n                \r\n    //     });\r\n    // }\r\n\r\n    componentDidMount (){\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el ) => {\r\n                return sum + el;\r\n            }, 0);\r\n            return sum > 0;\r\n    }\r\n  \r\n\r\n    purchaseHandler = () => { \r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing: true});\r\n        }else{\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }  \r\n    }\r\n \r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>ingredients cn't be loaded</p> : <Spinner />;\r\n\r\n        if (this.props.ings){\r\n            burger =(\r\n                <Aux>\r\n                    <Burger ingredient={this.props.ings} />\r\n                    <BuildControls \r\n                        ingredientAdded={this.props.onIngredientAdded} \r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.tPrice}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        ordered={this.purchaseHandler}\r\n                        purchasable = {this.updatePurchaseState(this.props.ings)} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary  \r\n            ingredients={this.props.ings}\r\n            canceled={this.purchaseCancelHandler}\r\n            continued={this.purchaseContinueHandler}\r\n            price={this.props.tPrice} />;\r\n        }\r\n\r\n        // const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n        //     return (\r\n        //         <li key={igKey}>\r\n        //             <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n        //         </li>);\r\n                \r\n        // })\r\n\r\n        \r\n\r\n        // if (this.state.loading){\r\n        //     orderSummary = <Spinner />;\r\n        // }\r\n        //out come {sald: true, meat:false, ...}\r\n        \r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        tPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        //onIngredientAdded: choice name\r\n        //type is what you have in your reducer ingredientNmae also\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-base';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENTS,\r\n        ingredientName: name\r\n    }\r\n};\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENTS,\r\n        ingredientName: name\r\n    }\r\n};\r\n\r\nexport const setIngredient = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients : ingredients\r\n    }\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredient(response.data))\r\n            }).catch(error =>{\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-base';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START,\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData).then(response => {\r\n            console.log(response.data);\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        })\r\n            .catch(error => {\r\n               dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type : actionTypes.PURCHASE_INIT\r\n    };\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error,\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    }\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchOrders = [];\r\n                for(let key in res.data){\r\n                    fetchOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchOrders));\r\n            }).catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            });\r\n    };\r\n};","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n        disabled={props.disabled}\r\n        className={'Button ' + props.btnType} \r\n        onClick={props.clicked}>\r\n        {props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return(\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>Our delicacy is just the best</h1>\r\n            <div style={{width: '100%',margin: 'auto'}}>\r\n                <Burger ingredient={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.CheckoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.CheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary","import React from 'react';\r\nimport './Input.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses =[\"InputElement\"];\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(\"Invalid\");\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case ('input'):\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}  onChange={props.changed}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}  onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value} onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            ); \r\n            break;\r\n        default:\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value}  onChange={props.changed}/>;\r\n    }\r\n    return(\r\n        <div className=\"Input\">\r\n            <label className=\"Label\">{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default input;","import React , {Component} from 'react';\r\nimport Button from '../components/UI/Button/Button';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport './ContactData.css';\r\nimport axios from '../axios-base';\r\nimport Input from '../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport * as orderActions from '../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm : {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 3\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            phone: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Phone No'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 11,\r\n                    isNumeric: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n         const order = {\r\n             ingredients : this.props.ings,\r\n             price: this.props.tPrice,\r\n             orderData: formData,\r\n             userId: this.props.userId\r\n         }\r\n         //console.log(order);\r\n       this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n        if(!rules){\r\n            return true;\r\n        }\r\n        if (rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.isEmail){\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isNumeric){\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm ={\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidation(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched =true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm : updatedOrderForm, formIsValid : formIsValid});\r\n    }\r\n\r\n    render (){\r\n        const formElementArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            })\r\n        } \r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType} \r\n                        elementConfig={formElement.config.elementConfig} \r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your Contact Details</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        ings : state.burgerBuilder.ingredients,\r\n        tPrice : state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onOrderBurger: (order, token) => dispatch(orderActions.purchaseBurger(order, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData);","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from '../containers/ContactData';\r\nimport {connect} from 'react-redux';\r\n//import * as actions from '../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n    CheckoutCancelledHandler= () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    CheckoutContinuedHandler= () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        let summary = <Redirect to=\"/\" />\r\n        if(this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                    ingredients={this.props.ings}\r\n                    CheckoutCancelled={this.CheckoutCancelledHandler}\r\n                    CheckoutContinued={this.CheckoutContinuedHandler} />\r\n           \r\n                    <Route \r\n                    path={this.props.match.path + '/contact-data'}\r\n                    component={ContactData} />\r\n                </div>\r\n            );    \r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        tPrice: state.burgerBuilder.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from \"react\";\r\nimport './Order.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName, \r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return <span style={{\r\n                            textTransform: 'capitalize',\r\n                            display: 'inline-block',\r\n                            margin: '0 8px',\r\n                            border: '1px solid #ccc',\r\n                            padding: '5px'\r\n                        }}\r\n         key={ig.name}>{ig.name} : ({ig.amount}) </span>\r\n    })\r\n    return(\r\n        <div className=\"Order\">\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong> {props.price}</strong> </p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-base';\r\nimport withErrorHandler from '../../helpers/withErrorHandler';\r\n//import order from '../../components/Order/Order';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Link from '../../components/Navigation/NavigationItems/NavigationItem';\r\n\r\nclass Orders extends Component{\r\n    \r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading ) {\r\n            orders = this.props.orders.map(order => (\r\n                        <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\r\n                    ))\r\n        }\r\n        \r\n        return (\r\n            <div> \r\n                <Modal show={this.props.error}>You need to log in first. <NavLink exact to=\"/auth\">Login Here</NavLink> </Modal>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        error: state.order.error,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls : {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n        },\r\n        isSignUp: true\r\n        //formIsValid: false,\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            console.log(\"changed\");\r\n            this.props.onSetAuthRedirectPath('/');\r\n\r\n        }\r\n        console.log(this.props.buildingBurger);\r\n        console.log(this.props.authRedirectPath);\r\n    }\r\n\r\n    checkValidation = (value, rules) => {\r\n        let isValid = true;\r\n        if(!rules){\r\n            return true;\r\n        }\r\n        if (rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.isEmail){\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isNumeric){\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidation(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true \r\n            }\r\n        };\r\n        this.setState({controls : updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return{isSignUp: !prevState.isSignUp};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const formElementArray = [];\r\n        for (let key in this.state.controls){\r\n            formElementArray.push({\r\n                id: key,\r\n                config: this.state.controls[key],\r\n            })\r\n        } \r\n        let form = formElementArray.map(formElement => (\r\n            <Input \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType} \r\n                elementConfig={formElement.config.elementConfig} \r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n            />\r\n        ));\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n\r\n        let errorMessage = null;\r\n        \r\n        if(this.props.error) { \r\n            errorMessage = <p style={{color:\"red\"}}>{this.props.error.message}</p>\r\n        }\r\n        \r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"Auth\">\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">{this.state.isSignUp ? \"SIGNUP\" : \"LOGIN\" }</Button>\r\n                </form>\r\n                 <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignUp ? \"LOGIN\" : \"SIGNUP\" }</Button>  \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n    render () {\r\n        return  <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder';\r\nimport Checkout from './containers/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\nimport * as actions from './store/actions/index';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignUp();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Redirect to=\"/\" />\r\n      </Switch> \r\n    );\r\n\r\n    if(this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Redirect to=\"/\" />\r\n       </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n       <Layout>\r\n         {routes}\r\n       </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 400,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES  = {\r\n    salad : 100,\r\n    cheese: 100,\r\n    meat: 250,\r\n    bacon: 150,\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName] : state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case (actionTypes.ADD_INGREDIENTS): return addIngredient(state, action);\r\n        case (actionTypes.REMOVE_INGREDIENTS):\r\n            // return {\r\n            //     ...state,\r\n            //     ingredients: {\r\n            //         ...state.ingredients,\r\n            //         [action.ingredientName] : state.ingredients[action.ingredientName] - 1\r\n            //     },\r\n            //     totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            // };\r\n            const updatedIngredient2 = {[action.ingredientName] : state.ingredients[action.ingredientName] - 1}\r\n            const updatedIngredients2 = updateObject(state.ingredients, updatedIngredient2);\r\n            const updatedState2 = {\r\n                ingredients: updatedIngredients2,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n            return updateObject(state, updatedState2);\r\n        case (actionTypes.SET_INGREDIENTS):\r\n            return updateObject(state, {\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat,\r\n                },\r\n                totalPrice: 400,\r\n                error: false,\r\n                building:false\r\n            });\r\n        case (actionTypes.FETCH_INGREDIENTS_FAILED):\r\n            return updateObject(state, {error: true} );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n    error: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case (actionTypes.PURCHASE_INIT):\r\n            return updateObject(state, {purchased: false});\r\n            // return{\r\n            //     ...state,\r\n            //     purchased: false\r\n            // };\r\n        case (actionTypes.PURCHASE_BURGER_START):\r\n            return updateObject(state, {loading: true});\r\n        case (actionTypes.PURCHASE_BURGER_SUCCESS):\r\n            const newOrder = updateObject(action.orderData,{id: action.orderId});\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased : true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n        case (actionTypes.PURCHASE_BURGER_FAIL):\r\n            return updateObject(state, {loading: false});\r\n        case (actionTypes.FETCH_ORDERS_START):\r\n            return updateObject(state, {loading: true, error:null});\r\n        case (actionTypes.FETCH_ORDERS_SUCCESS):\r\n            return updateObject(state, {\r\n            orders: action.orders,\r\n            error: null,\r\n            loading: false\r\n        });\r\n        case (actionTypes.FETCH_ORDERS_FAIL):\r\n            return updateObject(state, {loading: false, error: action.error});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n}; \r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return updateObject(state, {error: null, loading: true});\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return updateObject(state, { \r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                loading: false\r\n            });\r\n        case actionTypes.AUTH_FAIL:\r\n            return updateObject(state, {\r\n                error: action.error,\r\n                loading: false\r\n            });\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return updateObject(state, {\r\n                token: null,\r\n                userId: null\r\n            })\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return updateObject(state, {authRedirectPath: action.path})\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder : burgerBuilderReducer,\r\n    order : orderReducer,\r\n    auth : authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter basename=\"/damiburger\">\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    \r\n);\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/chef-burger.54235b09.jpg\";"],"sourceRoot":""}