{"version":3,"sources":["assets/img/chef-burger.jpg","components/Base.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControl.js","components/Burger/BuildControls.js","components/Modal/Modal.js","components/Burger/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder.js","components/UI/Button/Button.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/ContactData.js","containers/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","aux","props","children","logo","react_default","a","createElement","className","style","height","src","burgerLogo","alt","navigationItem","href","link","active","navigationItems","NavigationItems_NavigationItem","drawerToggle","onClick","clicked","toolbar","SideDrawer_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_NavigationItems","backdrop","show","sideDrawer","attachedClasses","open","Base","Backdrop_Backdrop","closed","join","marginTop","Layout","state","showSideDrawer","SideDrawerToggler","_this","setState","sideDrawerTogglerHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","BurgerIngredient","ingredient","type","burger","tIngredients","Object","keys","map","igKey","toConsumableArray","Array","_","i","components_Burger_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","Burger_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","display","orderSummary","ingredientSummary","ingredients","textTransform","canceled","continued","instance","axios","create","baseURL","spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","objectSpread","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceSubtraction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","sum","disabledInfo","OrderSummary","Spinner_Spinner","components_Modal_Modal","Burger_Burger","Burger_BuildControls","button","btnType","CheckoutSummary","width","margin","UI_Button_Button","CheckoutCancelled","CheckoutContinued","ContactData","name","email","address","street","postalCode","orderHandler","event","preventDefault","order","customer","country","phone","deliveryMethod","post","then","response","catch","error","form","placeholder","Checkout","CheckoutCancelledHandler","goBack","CheckoutContinuedHandler","replace","query","URLSearchParams","location","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","value","err","return","_this2","Order_CheckoutSummary_CheckoutSummary","Route","path","match","render","src_containers_ContactData","assign","App","components_Layout_Layout","Switch","exact","component","Boolean","window","hostname","app","BrowserRouter","basename","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6c5c5aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chef-burger.54235b09.jpg\";","\r\nconst aux = (props) => props.children;\r\n\r\nexport default  aux;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/img/chef-burger.jpg';\r\nimport './Logo.css';\r\n\r\nconst logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"burgre logo\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\n\r\nimport './NavigationItem.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <a href={props.link} className={props.active ? \"active\" : \"\"}>{props.children}</a>\r\n    </li>\r\n); \r\n\r\nexport default navigationItem; ","import React from 'react';\r\n\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\" active>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/\">Checkout</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick={props.clicked} className=\"DrawerToggle\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"90%\" />\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'; \r\nimport Aux from '../../Base';\r\n\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer', 'Close'];\r\n    if (props.open){\r\n        attachedClasses = ['SideDrawer', 'Open'];\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo height=\"11%\" />\r\n                <nav style={{marginTop: \"25px\"}}>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\n\r\nimport Aux from '../Base';\r\nimport './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n    SideDrawerToggler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerTogglerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        } );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerTogglerHandler} />\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.SideDrawerToggler} />\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Layout;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BurgerIngredient.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render(){\r\n        let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n        case ('bread-bottom'): \r\n            ingredient = <div className=\"BreadBottom\"></div>;\r\n            break;\r\n        case ('bread-top'): \r\n            ingredient = (\r\n                    <div className=\"BreadTop\">\r\n                        <div className=\"Seeds1\"></div>\r\n                        <div className=\"Seeds2\"></div>\r\n                    </div>\r\n                    );\r\n            break;\r\n        case ('meat'): \r\n            ingredient = <div className=\"Meat\"></div>;\r\n            break;\r\n        case ('cheese'): \r\n            ingredient = <div className=\"Cheese\"></div>;\r\n            break;\r\n        case ('salad'): \r\n            ingredient = <div className=\"Salad\"></div>;\r\n            break;\r\n        case ('bacon'): \r\n            ingredient = <div className=\"Bacon\"></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n    }\r\n    \r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let tIngredients = Object.keys(props.ingredient).map(igKey => {\r\n        return [...Array(props.ingredient[igKey])].map((_, i) =>{\r\n           return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n        return arr.concat(el)\r\n    }, []);\r\n    //check if the array is empty\r\n    if(tIngredients.length === 0) {\r\n        tIngredients = <p>Please start adding ingredients</p>;\r\n    } \r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {tIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport './BuildControl.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className=\"BuildControl\"> \r\n        <div className=\"Label\">{props.label}</div>\r\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className=\"More\" onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <h5>Current Price: {props.price.toFixed(2)}</h5>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n       <button className=\"OrderButton\" disabled={!props.purchasable}onClick={props.ordered}>ORDER NOW</button> \r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\n\r\nimport './Modal.css';\r\nimport Aux from '../Base';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n    // componentWillUpdate(){\r\n    //     console.log('Modal updated')\r\n    // }\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className=\"Modal\" \r\n                    style={{\r\n                        transform: this.props.show ? 'transformY(0)' : 'transformY(-100vh)', \r\n                        display: this.props.show ? 'block' : 'none'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n                );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport Aux from '../Base';\r\n// import Button from '../UI/Button/Button';\r\nimport './Button.css';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li>);\r\n            \r\n    });\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your delicious burger has the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <button className=\"Button Danger\" onClick={props.canceled}>CANCEL</button>\r\n            <button className=\"Button Success\" onClick={props.continued}>CONTINUE</button>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://react-burgerbuilder-21b9b.firebaseio.com/\"\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = (props) => (\r\n    <div className=\"Loader\">Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Aux from '../components/Base';\r\nimport Burger from '../components/Burger/Burger';\r\nimport BuildControls from '../components/Burger/BuildControls';\r\nimport Modal from '../components/Modal/Modal';\r\n// import '../components/Burger/Button.css';\r\nimport OrderSummary from '../components/Burger/OrderSummary';\r\nimport axios from '../axios-orders';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\n\r\nconst INGREDIENT_PRICES  = {\r\n    salad : 100,\r\n    cheese: 100,\r\n    meat: 250,\r\n    bacon: 150,\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 400,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    // modalStuff = () => {\r\n    //     const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n    //         return (\r\n    //             <li key={igKey}>\r\n    //                 <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n    //             </li>\r\n    //             );\r\n                \r\n    //     });\r\n    // }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el ) => {\r\n                return sum + el;\r\n            }, 0);\r\n            this.setState({purchasable: sum > 0});\r\n    }\r\n    //sum is sum of all ingredients\r\n    //el is individual element\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceSubtraction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceSubtraction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () =>  { \r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert(\"Payment Page!!\");\r\n        // this.setState({loading: true});\r\n        //  const order = {\r\n        //      ingredients : this.state.ingredients,\r\n        //      price: this.state.totalPrice,\r\n        //      customer: {\r\n        //          name: 'Adepoju Damilare',\r\n        //          address: {\r\n        //              street: '13, Yaba, Lagos',\r\n        //              country: 'Nigeria'\r\n        //          },\r\n        //          email: 'dami@mail.com',\r\n        //          phone: '08012345678'\r\n        //      },\r\n        //      deliveryMethod: 'Ship'\r\n        //  }\r\n        // axios.post('/orders.json', order).then(response => {\r\n        //     this.setState({loading: false, purchasing: false});\r\n        // })\r\n        //     .catch(error => {\r\n        //         this.setState({loading: false, purchasing: false});\r\n        //     });\r\n        const queryParams = [];\r\n        for(let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]))\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            //to pass the built burger data to the checkout page\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = <OrderSummary  \r\n        ingredients={this.state.ingredients}\r\n        canceled={this.purchaseCancelHandler}\r\n        continued={this.purchaseContinueHandler}\r\n        price={this.state.totalPrice} />;\r\n        if (this.state.loading){\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        // const ingredientSummary = Object.keys(this.state.ingredients).map(igKey => {\r\n        //     return (\r\n        //         <li key={igKey}>\r\n        //             <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.state.ingredients[igKey]}\r\n        //         </li>);\r\n                \r\n        // })\r\n        //out come {sald: true, meat:false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                <Burger ingredient={this.state.ingredients} />\r\n                <BuildControls \r\n                    ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    ordered={this.purchaseHandler}\r\n                    purchasable = {this.state.purchasable} />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default BurgerBuilder;","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst button = (props) => (\r\n    <button className={'Button ' + props.btnType} onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return(\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>Our delicacy is just the best</h1>\r\n            <div style={{width: '100%',margin: 'auto'}}>\r\n                <Burger ingredient={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.CheckoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.CheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary","import React , {Component} from 'react';\r\nimport Button from '../components/UI/Button/Button';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport './ContactData.css';\r\nimport axios from '../axios-orders';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postalCode: ''\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n         const order = {\r\n             ingredients : this.props.ingredients,\r\n             price: this.props.price,\r\n             customer: {\r\n                 name: 'Adepoju Damilare',\r\n                 address: {\r\n                     street: '13, Yaba, Lagos',\r\n                     country: 'Nigeria'\r\n                 },\r\n                 email: 'dami@mail.com',\r\n                 phone: '08012345678'\r\n             },\r\n             deliveryMethod: 'Ship'\r\n         }\r\n        axios.post('/orders.json', order).then(response => {\r\n            this.setState({loading: false});\r\n            this.props.history.push('/');\r\n        })\r\n            .catch(error => {\r\n                this.setState({loading: false});\r\n            });\r\n    }\r\n\r\n    render (){\r\n        let form = (\r\n            <form>\r\n                <input className=\"Input\"  type=\"text\" name=\"name\" placeholder=\"Your Name\" />\r\n                <input className=\"Input\" type=\"email\" name=\"email\" placeholder=\"Your email\" />\r\n                <input className=\"Input\" type=\"text\" name=\"street\" placeholder=\"Address\" />\r\n                <input className=\"Input\" type=\"text\" name=\"postal\" placeholder=\"Postal Code\" />\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.state.loading){\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your Contact Details</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from '../containers/ContactData';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice: 0\r\n    }\r\n\r\n    componentWillMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for (let param of query.entries()){\r\n            //['salad', '1]//the plus added coverts it to a number\r\n            if(param[0] ==='price'){\r\n                price = +param[1];\r\n            }else{\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState({ingredients: ingredients, totalPrice: price});\r\n    }\r\n\r\n    CheckoutCancelledHandler= () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    CheckoutContinuedHandler= () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.state.ingredients}\r\n                    CheckoutCancelled={this.CheckoutCancelledHandler}\r\n                    CheckoutContinued={this.CheckoutContinuedHandler} />\r\n                    {/* instead of using component we use render to be able to pass the ingredient data to the condata data page */}\r\n                    <Route path={this.props.match.path + '/contact-data'} render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder';\r\nimport Checkout from './containers/Checkout';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n       <Layout>\r\n         <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n         </Switch>\r\n       </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n    <BrowserRouter basename=\"/burgerbuilder\">\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}